apiVersion: batch/v1
kind: Job
metadata:
  name: run-{{ task }}-{{ phase }}-{{ team }}
  labels:
    task: {{ task }}
    phase: {{ phase }}
    team: {{ team }}
spec:
  template:
    spec:
      initContainers:
      - name: decode
        image: "gcr.io/clic-215616/decoding"
        {% if gpu %}
        resources:
          limits:
            nvidia.com/gpu: 1
        {% endif %}
        command: [
          "python3",
          "/code/decode.py",
          "--debug",
          "--submission_bucket", "clic2020_submissions",
          "--environment_bucket", "clic2020_environments",
          "--exec_dir", "/var/lib/docker/submissions",
          "--num_cpus", "1",
          "--memory_limit", "12g",
          "--timeout", "36000",
          "--task", "{{ task }}",
          "--phase", "{{ phase }}",
          "--team", "{{ team }}",
          "--image", "{{ image }}"]
        securityContext:
          capabilities: {}
          privileged: true
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/var/run/secret/cloud.google.com/service-account.json"
        volumeMounts:
          - name: clic-sa-key-volume
            mountPath: "/var/run/secret/cloud.google.com"
          - name: docker-sock
            mountPath: "/var/run/docker.sock"
          - name: executable-volume
            mountPath: "/var/lib/docker"
          - name: code-volume
            mountPath: "/code"
      containers:
      - name: evaluate
        image: "gcr.io/clic-215616/evaluation"
        command: [
          "python3",
          "/code/evaluate.py",
          "--submission_bucket", "clic2020_submissions",
          "--target_bucket", "clic2020_targets",
          "--task", "{{ task }}",
          "--phase", "{{ phase }}",
          "--team", "{{ team }}",
          "--metrics", "PSNR", "MSSSIM"]
        securityContext:
          capabilities: {}
          privileged: true
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/var/run/secret/cloud.google.com/service-account.json"
        volumeMounts:
          - name: clic-sa-key-volume
            mountPath: "/var/run/secret/cloud.google.com"
          - name: code-volume
            mountPath: "/code"
      restartPolicy: Never
      volumes:
        - name: clic-sa-key-volume
          secret:
            secretName: clic-sa-key
        - name: docker-sock
          hostPath:
            path: "/var/run/docker.sock"
        - name: executable-volume
          hostPath:
            path: "/var/lib/docker"
        - name: code-volume
          configMap:
            name: code
  backoffLimit: 0
